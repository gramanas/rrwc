#+html: <p align="center"><img src="logo.png" /></p>
* rrwc
resize-rename-watermark-comment
is a utility for photographers that does exactly what it says on the package.

It takes a (possibly huge) amount of photographs (jpg), and spits it on different
locations, each with it's own rrwc options.

It's currently under developement.

* Goals
  - Cross Platform (linux + windows)
  - Fast
  - Multithreading
  - gui + cli

* Dependencies
  - [[https://www.qt.io/][Qt5]] for the Gui
  - Qt5 for the data
  - [[http://www.exiv2.org/][Exiv2]] for exif management
  - [[https://opencv.org/][OpenCV]] for the image processing

You also need the [[https://www.hdfgroup.org/solutions/hdf5/][Hdf5]] library.

** Get the toolchain
 - ~cmake~
 - ~ninja~ (or ~Gnu make~)
 - ~clang~ (or ~gcc~)

Make sure to use CMake >= 3.9.4 (if you don't change the minimum 
required version in the ~CMakeLists.txt~ file.

The qt stuff is taken care by the ~qt5-base~ package

** Packages
Arch Linux:
#+BEGIN_SRC bash
sudo pacman -S qt5-base hdf5 opencv exiv2
#+END_SRC

Ubuntu:
#+BEGIN_SRC bash
sudo apt-get install libopencv2-dev qt5base-dev libhdf5-dev libexiv2-dev qtcreator
#+END_SRC


* Build it
- clone the repo
- ~cd /path/to/repo~
- ~cmake .~
- ~make~
- ~./rrwc~

** Ninja
You can use ninja if you run cmake like so:
#+BEGIN_SRC bash
cmake -GNinja .
# and then instead of make
ninja -j4     # -j 4 enables concurrency with 4 cores
#+END_SRC

** Clang
When using clang I noticed a speedup in the performance
so it is the recomended compiler on linux.

Either 
#+BEGIN_SRC bash
export CXX=/path/to/clang++
#+END_SRC
before running cmake,

or run cmake like so:
#+BEGIN_SRC bash
cmake -DCMAKE_CXX_COMPILER=clang++ .
#+END_SRC
The later will store your preference in the CMakeCache.txt file so you won't
have to specify it again.

** Cross compile
#+BEGIN_SRC C++
// TODO
#+END_SRC




* Test - contribute - notes

Anyone is welcome to contribute whatever they want.

Should work for macOS but I've never tested it, and I don't plan to.

